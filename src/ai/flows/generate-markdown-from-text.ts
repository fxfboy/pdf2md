// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview Converts extracted text from a PDF into Markdown format.
 *
 * - generateMarkdownFromText - A function that generates Markdown from text.
 * - GenerateMarkdownFromTextInput - The input type for the generateMarkdownFromText function.
 * - GenerateMarkdownFromTextOutput - The return type for the generateMarkdownFromText function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateMarkdownFromTextInputSchema = z.object({
  text: z.string().describe('The text extracted from the PDF.'),
  filename: z.string().describe('The name of the PDF file, without the extension.'),
});
export type GenerateMarkdownFromTextInput = z.infer<typeof GenerateMarkdownFromTextInputSchema>;

const GenerateMarkdownFromTextOutputSchema = z.object({
  markdown: z.string().describe('The generated Markdown content.'),
});
export type GenerateMarkdownFromTextOutput = z.infer<typeof GenerateMarkdownFromTextOutputSchema>;

export async function generateMarkdownFromText(input: GenerateMarkdownFromTextInput): Promise<GenerateMarkdownFromTextOutput> {
  return generateMarkdownFromTextFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateMarkdownFromTextPrompt',
  input: {schema: GenerateMarkdownFromTextInputSchema},
  output: {schema: GenerateMarkdownFromTextOutputSchema},
  prompt: `You are an expert in converting text to Markdown format.  

  Take the following text, extracted from a PDF file named {{{filename}}}, and convert it to Markdown, preserving the original formatting and structure as closely as possible.  Try your best to preserve the layout of the original PDF, including any tables, lists, images, and headings.  For images and tables, save them in the same folder of the markdown text and reference them in the markdown at the same position as the original pdf.

  Text to convert:
  {{text}}`,
});

const generateMarkdownFromTextFlow = ai.defineFlow(
  {
    name: 'generateMarkdownFromTextFlow',
    inputSchema: GenerateMarkdownFromTextInputSchema,
    outputSchema: GenerateMarkdownFromTextOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
